@require 'computed.styl';
@require 'mixins.styl';
@require 'vars.styl';

.container {
    display: flex;
    flex-direction: column;
    margin: auto;
    padding-left: rythm(4);
    padding-right: rythm(4);
}

.row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

shortcuts = {
    a: left right top bottom,
    auto: auto,
    ac: align-content,
    ai: align-items,
    as: align-self,
    bl: baseline,
    b: bottom,
    c: center,
    fe: flex-end,
    fs: flex-start,
    inh: inherit
    ini: initial,
    jc: justify-content,
    l: left,
    m: margin,
    o: order,
    p: padding,
    r: right,
    s: stretch,
    sa: space-around,
    sb: space-between,
    t: top,
    x: left right,
    y: top bottom
}

subshortcuts = {
    ac: s c fs fe sb sa ini inh,
    ai: s c fs fe bl ini inh,
    as: auto s c fs fe bl ini inh,
    jc: fs fe c sb sa ini inh
}


for vpk, vpv in viewports {

    // xs-* sm-* ...
    +with-vp(vpk) {

        .container {
            width: vpv.container-width;
        }

        for i in (1 .. 12) {
            .col-{vpk}-{i} {
                +width-vp(vpk) {
                    display: flex;
                    width: (i * 100 / 12) %;
                }
            }
        }

        // *-p-*, *-m-*, ...
        for k1 in p m {
            v1 = shortcuts[k1]

            // *-l-*, *-a-*, ...
            for k2 in l r t b x y {
                v2 = shortcuts[k2]

                    // *-0*, *-3-*, ...
                    for i in (0..4) {
                        .{sk_vp}-{k1}-{k2}-{i} {
                            for subdirection in direction {
                                {v1}-{v2}: rythm(i * 2)
                            }
                        }

                    }
                    
                }
            }
        }

        // *-m-*-auto
        .{sk_vp}-m-{direction_key}-auto {
            margin-{direction}: auto
        }
    }
}